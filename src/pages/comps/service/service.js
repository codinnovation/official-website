import React, { useState, useEffect, useRef, useContext } from "react";
import Head from "next/head";
import Layout from "@/pages/layout";
import styles from "../../../styles/services/service.module.css";
import { db } from "../../../../firebase.config";
import { get, ref } from "firebase/database";
import CircularProgress from "@mui/material/CircularProgress";
import RecordVoiceOverIcon from "@mui/icons-material/RecordVoiceOver";
import Box from "@mui/material/Box";
import Popover from "@mui/material/Popover";
import { HeroContext } from "@/pages/context/heroContext";

function Service() {
  const [data, setData] = useState([]);
  const [open, setOpen] = useState(false);
  const containerHeaderRef = useRef(null)

  const { setHeroHeader, heroHeader, heroDescription, setHeroDescription } =
  useContext(HeroContext);

  useEffect(() => {
    setHeroHeader("Our Services");
  }, [setHeroHeader, heroHeader]);

  useEffect(() => {
    setHeroDescription(
      "Welcome to COD Innovations, where we blend courage, obedience, and discipline to challenge the status, pursue groundbreaking ideas, and consistently deliver exceptional results, shaping the future of innovation."
    );
  }, [heroDescription, setHeroDescription]);

  const handleOpen = () => {
    setOpen(true);
  };

  const handleClose = () => {
    setOpen(false);
  };

  useEffect(() => {
    setTimeout(() => {
      handleOpen();
    }, 100);

    setTimeout(() => {
      handleClose();
    }, 1700);
  }, []);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const dbRef = ref(db, "services");
        const response = await get(dbRef);
        const data = response.val();

        if (data && typeof data === "object") {
          const dataArray = Object.entries(data).map(([key, value]) => ({
            key,
            ...value,
          }));
          setData(dataArray);
        } else {
          setData([]);
        }
      } catch (error) {
        console.error("Error fetching data:");
        setData([]);
      }
    };

    fetchData();
  }, []);


  useEffect(() => {
    if (containerHeaderRef.current) {
      containerHeaderRef.current.scrollIntoView({ behavior: "smooth" });
    }
  }, []);

  return (
    <>
      <Head>
        <title>COD | Innovations - Services</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/logo-w-2.png" />
      </Head>
      <Layout>
        <div className={styles.container}>
          <div className={styles.containerHeader}>
            <h1>Our Services</h1>
          </div>

          <div className={styles.containerItems}>
            {data.length === 0 ? (
              <Box
                style={{
                  display: "flex",
                  alignItems: "center",
                  justifyContent: "center",
                  width: "100%",
                }}
              >
                <CircularProgress
                  style={{
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "center",
                  }}
                />
              </Box>
            ) : (
              data.map((item, index) => (
                <div className={styles.containerItem} key={index}>
                  <div className={styles.container_item_icon}>
                    <RecordVoiceOverIcon className={styles.icon} />
                  </div>
                  <div className={styles.container_item_header}>
                    <h1>{item.title}</h1>
                  </div>
                  <div className={styles.container_item_text}>
                    <p>{item.content}</p>
                  </div>
                </div>
              ))
            )}
          </div>
        </div>

        <Popover
          anchorReference="anchorPosition"
          open={open}
          onClose={handleClose}
          anchorPosition={{ top: 160, left: 20 }}
          style={{
            display: "flex",
            justifyContent: "center",
            alignContent: "center",
          }}
        >
          <p
            style={{
              textAlign: "center",
              padding: "10px",
              backgroundColor: "#f85a40",
              color: "#fff",
            }}
          >
            Viewing Services Page
          </p>
        </Popover>
      </Layout>
    </>
  );
}

export default Service;
